
## save history

savehistory("all_trips.rhistroy")


April <- read_csv("April 2022 Cycle Data (version 1).csv")
August <- read_csv("August 2021 Cycle data.csv")
December <- read_csv("December 2021 Cycle Data.csv")
February <- read_csv("February 2022 Cycle data.csv")
January <- read_csv("Janurary 2022 Cycle Data.csv")
July <- read_csv("July 2021 Cycle data.csv")
June <- read_csv("June 2021 Cycle data.csv")
May <- read_csv("May 2021 Cycle Data.csv")
November <- read_csv("November 2021 Cycle Data.csv")
October <- read_csv("October 2021 Cycle Data.csv")
September <- read_csv("September 2021 Cycle Data.csv")
March <- read_csv("March 2022 Cycle Data.csv")

all_trips <- bind_rows(April,August,December,March,February,January,July,June,May,November,October,September)

## transforming original data format into multiple columns
all_trips$date <- as.Date(all_trips$started_at, "%m/%d/%y")
all_trips$month <- format(as.Date(all_trips$date), "%m")
all_trips$day <- format(as.Date(all_trips$date), "%d")
all_trips$year <- format(as.Date(all_trips$date), "%Y")
all_trips$day_of_week <- format(as.Date(all_trips$date),"%A")

all_trips$ride_length <- difftime(all_trips$ended_at,all_trips$started_at)


## Transforming data to characters 
is.factor(all_trips$trip_duration)
all_trips$trip_duration <- as.numeric(as.character(all_trips$trip_duration))
is.numeric(all_trips$trip_duration)


## Cleaning any invalid or corrupt data
all_trips <- all_trips[!(all_trips$start_station_name == "HQ QR" | all_trips$trip_duration<0),]
all_trips <- all_trips[!(all_trips$start_station_name == "HQ QR" | all_trips$trip_duration==0),]

#Casual and Membership Breakdown
all_trips%>% group_by(member_casual)%>% summarise(n=n())%>%
  mutate(percent = n*100/sum(n))

## Descriptive Analysis 
mean(all_trips$trip_duration)
median(all_trips$trip_duration)
max(all_trips$trip_duration)
min(all_trips$trip_duration)

# Compare members and casual users
aggregate(all_trips$trip_duration ~ all_trips$member_casual, FUN = mean)
aggregate(all_trips_v2$trip_duration ~ all_trips_v2$member_casual, FUN = median)
aggregate(all_trips_v2$trip_duration ~ all_trips_v2$member_casual, FUN = max)
aggregate(all_trips_v2$trip_duration ~ all_trips_v2$member_casual, FUN = min)

# Ordered by day of the week for Avg ride time by casual vs member
all_trips$day_of_week <- ordered(all_trips$day_of_week, levels=c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"))

# See the average ride time by each day for members vs casual users
aggregate(all_trips$trip_duration ~ all_trips$member_casual + all_trips$day_of_week, FUN = mean)

# analyze ridership data by type and weekday
all_trips %>% 
  group_by(member_casual, day_of_week) %>%  #groups by usertype and weekday
  summarise(number_of_rides = n()							#calculates the number of rides and average duration 
            ,average_duration = mean(trip_duration)) %>% 		# calculates the average duration
  arrange(member_casual, day_of_week)								# sorts

# Let's visuaize the number of rides by rider type
all_trips %>% 
  group_by(member_casual, day_of_week) %>% 
  summarise(number_of_rides = n()
            ,average_duration = mean(trip_duration)) %>% 
  arrange(member_casual, day_of_week)  %>% 
  ggplot(aes(x = day_of_week, y = number_of_rides, fill = member_casual)) +
  geom_col(position = "dodge")

# Let's create a visualization for average duration
all_trips %>% 
  group_by(member_casual, day_of_week) %>% 
  summarise(number_of_rides = n()
            ,average_duration = mean(trip_duration)) %>% 
  arrange(member_casual, day_of_week)  %>% 
  ggplot(aes(x = day_of_week, y = average_duration, fill = member_casual)) +
  geom_col(position = "dodge")


#Trips by Month 
month_trips <- all_trips %>% 
  group_by(member_casual, month) %>%  
  summarise(number_of_rides = n()							
            ,average_duration = mean(trip_duration)) %>% 		
  arrange(member_casual, month)	
print(month_trips, n = 24)

#trips by Month - Visualization 
all_trips %>% 
  group_by(member_casual, month) %>% 
  summarise(number_of_rides = n()
            ,average_duration = mean(trip_duration)) %>% 
  arrange(member_casual, month)  %>% 
  ggplot(aes(x = month, y = number_of_rides, fill = member_casual)) +
  geom_col(position = "dodge")


#Duration and # of Trips By Membership 
all_trips %>% 
  group_by(member_casual) %>%  
  summarise(number_of_rides = n()                       
            ,average_duration = mean(trip_duration)) %>%        
  arrange(member_casual)

#Trip Duration By Month 
all_trips %>% 
  group_by(member_casual, month) %>% 
  summarise(number_of_rides = n()
            ,average_duration = mean(trip_duration)) %>% 
  arrange(member_casual, month)  %>% 
  ggplot(aes(x = month, y = average_duration, fill = member_casual)) +
  geom_col(position = "dodge")
  


counts <- aggregate(all_trips$trip_duration ~ all_trips$member_casual + all_trips$day_of_week, FUN = mean)
write.csv(all_trips, "C:/Users/David/Downloads/Cycle Data/Original Data - CSV/all_tripsdata.CSV", row.names = TRUE
